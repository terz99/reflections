What happens when you initialize a repository? Why do you need to do it?

	- '.git' file is created thus making the directory a repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	- The staging area offers an overview of the newly made commits.

How can you use the staging area to make sure you have one commit per logical change?

	- I can use the command 'git diff --staged' to see the changes in the files which are in the staging area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	- Branches can help if I want to modify my project but not as an updated version, but rather as an experimental version.

How do the diagrams help you visualize the branch structure?

	- It helps me visualize the branch structure because it is represented like a tree

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	- The result of merging two branches is another commit which has two parents, thus containing all the gits from both parents. We represent it with diagram in order to help us visualize the structure of commits

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	- A pro of automatic merging is that it saves time. A con would be that it could potentially bring in code that isn't necessary. A pro of manual merging is that it gives you control over exactly which code to include. A con is that it takes more time.